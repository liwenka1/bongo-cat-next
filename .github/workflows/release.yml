name: Release CI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Generate changelog and create release
        id: create_release
        run: npx changelogithub --draft --name "${{ steps.vars.outputs.tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-app:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            target: aarch64-apple-darwin
          - platform: macos-latest
            target: x86_64-apple-darwin
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
          - platform: windows-latest
            target: aarch64-pc-windows-msvc
          - platform: ubuntu-22.04
            target: x86_64-unknown-linux-gnu

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Install rust target
        run: rustup target add ${{ matrix.target }}

      - name: Install dependencies (ubuntu only)
        if: startsWith(matrix.platform, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf xdg-utils libxdo-dev libxcb1-dev libxrandr-dev libdbus-1-dev

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: target

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install app dependencies
        run: pnpm install --frozen-lockfile

      - name: Verify and prepare build files
        run: |
          echo "=== Current working directory ==="
          pwd
          echo "=== Checking src-tauri directory ==="
          ls -la src-tauri/
          echo "=== Checking icons in src-tauri ==="
          ls -la src-tauri/icons/
          echo "=== Verifying specific required icons ==="
          test -f src-tauri/icons/32x32.png && echo "✓ 32x32.png found" || echo "✗ 32x32.png missing"
          test -f src-tauri/icons/128x128.png && echo "✓ 128x128.png found" || echo "✗ 128x128.png missing"
          test -f src-tauri/icons/icon.ico && echo "✓ icon.ico found" || echo "✗ icon.ico missing"
          test -f src-tauri/icons/icon.icns && echo "✓ icon.icns found" || echo "✗ icon.icns missing"

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          CI: false
          PLATFORM: ${{ matrix.platform }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ needs.create-release.outputs.tag }}
          releaseName: 'BongoCat Next ${{ needs.create-release.outputs.tag }}'
          releaseBody: ''
          releaseDraft: true
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
          args: --target ${{ matrix.target }} 